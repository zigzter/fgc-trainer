version: '3.8'
services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_BACKEND_URL=http://localhost:3030
    depends_on:
      - backend
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "3030:3030"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID} # Replace with IAM
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY} # Replace with IAM
      AWS_COGNITO_POOL_ID: ${AWS_COGNITO_POOL_ID}
      AWS_COGNITO_APP_CLIENT_ID: ${AWS_COGNITO_APP_CLIENT_ID}
      AWS_REGION: ${AWS_REGION}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      PORT: 3030
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
volumes:
  postgres_data:

