export default function RoutineForm({ onCancel, method, initialData }: Props) {
    const { register, handleSubmit } = useForm<RoutineFormData>({
        defaultValues: initialData,
    });

    const mutation = useMutation<RoutineResponse, RoutineError, RoutineFormData>({
        mutationFn: upsertRoutine(method),
        mutationKey: ["routines"],
    });

    const onSubmit = (data: RoutineFormData) => {
        mutation.mutate(data);
    };

    return (
        <Form onSubmit={handleSubmit(onSubmit)}>
            <Autocomplete
                id="game"
                options={games}
                {...register("game")}
                renderInput={(params) => <TextField {...params} label="Game" />}
            />
            <TextField label="Title" {...register("title")} />
            <TextField label="Notes" {...register("notes")} />
            <Button variant="outlined" onClick={onCancel}>
                Cancel
            </Button>
            <LoadingButton variant="contained" type="submit">
                {method === "POST" ? "Create" : "Update"}
            </LoadingButton>
        </Form>
    );
}
